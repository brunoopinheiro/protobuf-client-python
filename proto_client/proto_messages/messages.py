# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: packages.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class EnumeratedConfigCommandCommandType(betterproto.Enum):
    ASPECT_RATIO = 1
    BLUR = 2
    BRIGHTNESS = 3
    CAM = 4
    FLASH = 5
    MODE = 6
    ZOOM = 7


class SuiteExecutionDetailsTestCaseStepType(betterproto.Enum):
    NOT_STARTED = 1
    CONFIGURATE_DEVICE = 2
    MOVING = 3
    TAKE_PICTURE = 4
    CLEANUP_CONFIG = 5
    GET_IMAGES = 6
    FINISHED = 7
    SKIPPED = 8


class SuiteExecutionDetailsTestSuiteStepType(betterproto.Enum):
    SETUP_EXECUTION = 1
    RUNNING_TESTS = 2
    IQA_PROCESSING = 3
    COMPLETED = 4


class ExecutionStatusState(betterproto.Enum):
    IDLE = 1
    RUNNING = 2


@dataclass
class SuiteExecution(betterproto.Message):
    """switch"""

    id: int = betterproto.int32_field(1)
    timestamp: int = betterproto.uint64_field(2)
    user_id: int = betterproto.int32_field(3)
    suite_id: int = betterproto.int32_field(4)
    device_id: int = betterproto.int32_field(5)


@dataclass
class ExecutionReportDetails(betterproto.Message):
    title: str = betterproto.string_field(1)
    test_suite_name: str = betterproto.string_field(2)
    output_dir: str = betterproto.string_field(3)


@dataclass
class EnumeratedConfigCommand(betterproto.Message):
    type: "EnumeratedConfigCommandCommandType" = betterproto.enum_field(1)
    value: str = betterproto.string_field(2)


@dataclass
class IndexedConfigCommand(betterproto.Message):
    id_comand_type: int = betterproto.int32_field(1)
    value: str = betterproto.string_field(2)


@dataclass
class EnumerateDeviceConfigConfiguration(betterproto.Message):
    """test case"""

    commands: List["EnumeratedConfigCommand"] = betterproto.message_field(1)


@dataclass
class IndexedDeviceConfigConfiguration(betterproto.Message):
    commands: List["IndexedConfigCommand"] = betterproto.message_field(1)


@dataclass
class RobotPositionsList(betterproto.Message):
    """robot postions"""

    positions: List["Header"] = betterproto.message_field(1)


@dataclass
class TestCase(betterproto.Message):
    """cases"""

    id: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    moves_list: List["Header"] = betterproto.message_field(3)
    enumerate_config: "EnumerateDeviceConfigConfiguration" = betterproto.message_field(4, group="config")
    indexed_config: "IndexedDeviceConfigConfiguration" = betterproto.message_field(5, group="config")


@dataclass
class Header(betterproto.Message):
    id: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class TestCaseList(betterproto.Message):
    cases: List["Header"] = betterproto.message_field(1)


@dataclass
class TestSuite(betterproto.Message):
    id: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    tests_cases: List["Header"] = betterproto.message_field(3)


@dataclass
class TestSuiteList(betterproto.Message):
    cases: List["Header"] = betterproto.message_field(1)


@dataclass
class Device(betterproto.Message):
    """device"""

    id: int = betterproto.int32_field(1)
    serial_number: str = betterproto.string_field(2)
    model: str = betterproto.string_field(3)
    brand: str = betterproto.string_field(4)
    software_version: str = betterproto.string_field(5)
    hardware_version: str = betterproto.string_field(6)
    physical_width: float = betterproto.float_field(7)
    camera_version: str = betterproto.string_field(8)
    # to backend logic
    comm_uri: str = betterproto.string_field(9)
    validated_to_execution: bool = betterproto.bool_field(10)
    allocated_slot: "Header" = betterproto.message_field(11)


@dataclass
class PairToken(betterproto.Message):
    qrcode_data: str = betterproto.string_field(1)
    num_code: str = betterproto.string_field(2)


@dataclass
class DeviceList(betterproto.Message):
    device_list: List["Device"] = betterproto.message_field(1)


@dataclass
class Frame(betterproto.Message):
    current_frame: str = betterproto.string_field(1)


@dataclass
class WorldSlotsInfo(betterproto.Message):
    slots: List["Header"] = betterproto.message_field(1)


@dataclass
class DeviceWorldInfo(betterproto.Message):
    device_id: int = betterproto.int32_field(1)
    slot_id: int = betterproto.int32_field(2)


@dataclass
class DetectionBox(betterproto.Message):
    box_id: int = betterproto.int32_field(1)
    # normed values between [0, 1]
    start_x: float = betterproto.float_field(2)
    start_y: float = betterproto.float_field(3)
    size_x: float = betterproto.float_field(4)
    size_y: float = betterproto.float_field(5)


@dataclass
class BoxDescriptor(betterproto.Message):
    name_type: "Header" = betterproto.message_field(1)
    options: List["Header"] = betterproto.message_field(2)


@dataclass
class ScreenMappingInfo(betterproto.Message):
    image: str = betterproto.string_field(1)
    boxes: List["DetectionBox"] = betterproto.message_field(2)
    descriptions: List["BoxDescriptor"] = betterproto.message_field(3)


@dataclass
class LabeledItem(betterproto.Message):
    box_id: int = betterproto.int32_field(1)
    description: List["BoxDescriptor"] = betterproto.message_field(2)


@dataclass
class ScreenMappingResult(betterproto.Message):
    labeled_icon: List["LabeledItem"] = betterproto.message_field(1)


@dataclass
class SuiteExecutionDetails(betterproto.Message):
    suite_id: int = betterproto.int32_field(1)
    suite_name: str = betterproto.string_field(2)
    test_cases_status: List["SuiteExecutionDetailsTestCaseStatus"] = betterproto.message_field(3)
    suite_case_status: "SuiteExecutionDetailsTestSuiteStatus" = betterproto.message_field(4)


@dataclass
class SuiteExecutionDetailsRelativeStepNumeration(betterproto.Message):
    current_step: int = betterproto.int32_field(1)
    total_steps: int = betterproto.int32_field(2)


@dataclass
class SuiteExecutionDetailsTestCaseStatus(betterproto.Message):
    test_id: int = betterproto.int32_field(1)
    test_name: str = betterproto.string_field(2)
    step_type: "SuiteExecutionDetailsTestCaseStepType" = betterproto.enum_field(3)
    step_numeration: "SuiteExecutionDetailsRelativeStepNumeration" = betterproto.message_field(4)


@dataclass
class SuiteExecutionDetailsTestSuiteStatus(betterproto.Message):
    step_type: "SuiteExecutionDetailsTestSuiteStepType" = betterproto.enum_field(1)
    step_numeration: "SuiteExecutionDetailsRelativeStepNumeration" = betterproto.message_field(2)


@dataclass
class ExecutionStatus(betterproto.Message):
    current_state: "ExecutionStatusState" = betterproto.enum_field(1)
    suite_execution_details: "SuiteExecutionDetails" = betterproto.message_field(2)


@dataclass
class ValidationItem(betterproto.Message):
    captured_image: str = betterproto.string_field(1)
    question: str = betterproto.string_field(2)


@dataclass
class ValidationDeviceForms(betterproto.Message):
    validation: List["ValidationItem"] = betterproto.message_field(1)


@dataclass
class ValidationExecutionDetails(betterproto.Message):
    current_step: int = betterproto.int32_field(1)
    total_steps: int = betterproto.int32_field(2)
    description: str = betterproto.string_field(3)


@dataclass
class User(betterproto.Message):
    user_id: int = betterproto.int32_field(1)
    user_name: str = betterproto.string_field(2)
    email: str = betterproto.string_field(3)
    admin: bool = betterproto.bool_field(4)


@dataclass
class ImageCapture(betterproto.Message):
    position_info: "Header" = betterproto.message_field(1)
    image: str = betterproto.string_field(2)
    issue: str = betterproto.string_field(3)
    score: float = betterproto.float_field(4)


@dataclass
class SuiteExecutionResultHeader(betterproto.Message):
    id: int = betterproto.int32_field(1)
    suite_info: "Header" = betterproto.message_field(2)
    device: "Device" = betterproto.message_field(3)
    user: "User" = betterproto.message_field(4)
    average_score: float = betterproto.float_field(5)
    validation: bool = betterproto.bool_field(6)
    date_time: str = betterproto.string_field(7)
    wons: int = betterproto.int32_field(8)
    losts: int = betterproto.int32_field(9)
    drawns: int = betterproto.int32_field(10)


@dataclass
class SuiteExecutionResultsGeneralList(betterproto.Message):
    suite_execution_results_header: List["SuiteExecutionResultHeader"] = betterproto.message_field(1)


@dataclass
class SuiteExecutionResultElement(betterproto.Message):
    applicable: bool = betterproto.bool_field(1)
    test_case: "Header" = betterproto.message_field(2)
    capture_item: "ImageCapture" = betterproto.message_field(3)


@dataclass
class SuiteExecutionResultItem(betterproto.Message):
    execution_element: List["SuiteExecutionResultElement"] = betterproto.message_field(1)


@dataclass
class SuiteExecutionResultCompare(betterproto.Message):
    execution_info: List["SuiteExecutionResultHeader"] = betterproto.message_field(1)
    execution_tuple: List["SuiteExecutionResultItem"] = betterproto.message_field(2)


@dataclass
class TestCaseCaptureResultsCompare(betterproto.Message):
    captured_image: List["ImageCapture"] = betterproto.message_field(1)
